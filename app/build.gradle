plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "com.apollographql.apollo3"
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id "com.google.protobuf" version "0.8.17"
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'fi.danielz.bussini'
    compileSdk 33

    defaultConfig {
        applicationId 'fi.danielz.bussini'
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "API_KEY", localProperties['apiKey']

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"
    implementation "androidx.wear:wear:1.2.0"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.wear.watchface:watchface-complications-data-source-ktx:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // work manager

    def work_version = "2.8.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // data store
    implementation "androidx.datastore:datastore:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"



    // material
    implementation "androidx.compose.material3:material3:1.1.0"
    implementation "androidx.compose.material3:material3-window-size-class:1.1.0"
    implementation "androidx.wear.compose:compose-material:$wear_compose_version"
    // material icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"


    // hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'


    // apollo graphql
    implementation "com.apollographql.apollo3:apollo-runtime:3.7.3"
    implementation "com.apollographql.apollo:apollo-android-support:2.5.14"

    // timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation("androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version")
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // navigation
    def nav_version = "2.5.3"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // lottie
    def lottieVersion = "6.0.0"
    implementation "com.airbnb.android:lottie-compose:$lottieVersion"

}
kapt {
    correctErrorTypes true
}


apollo {

    service("service") {

        packageName.set("fi.danielz.bussini")
        generateKotlinModels.set(true)
    }

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.23.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

